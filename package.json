{
  "name": "@tayloredtechnology/renovate-config",
  "description": "Taylored Technology configuration settings for Renovate",
  "homepage": "https://github.com/TayloredTechnology/renovate-config#readme",
  "version": "0.1.1",
  "author": {
    "email": "TayloredTechnology@protonmail.ch",
    "name": "Taylored Technology"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TayloredTechnology/renovate-config.git"
  },
  "bugs": {
    "url": "https://github.com/TayloredTechnology/renovate-config/issues"
  },
  "devDependencies": {
    "@commitlint/cli": "6.2.0",
    "@commitlint/config-conventional": "6.1.3",
    "@commitlint/prompt-cli": "6.1.3",
    "conventional-changelog-cli": "1.3.22",
    "husky": "0.14.3",
    "prettier": "1.18.2",
    "release-it": "7.6.3",
    "xo": "0.36.1"
  },
  "scripts": {
    "commit": "commit",
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "release": "release-it"
  },
  "license": "SEE LICENSE IN LICENSE",
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "renovate-config": {
    "default": {
      "extends": [
        ":autodetectPinVersions",
        ":automergeMinor",
        ":automergePr",
        ":combinePatchMinorReleases",
        ":gitSignOff",
        ":ignoreModulesAndTests",
        ":maintainLockFilesDisabled",
        ":onlyNpm",
        ":pinSkipCi",
        ":prConcurrentLimit20",
        ":prHourlyLimit4",
        ":prImmediately",
        ":rebaseStalePrs",
        ":renovatePrefix",
        ":semanticCommits",
        ":semanticPrefixFixDepsChoreOthers",
        ":separateMajorReleases",
        ":unpublishSafeDisabled",
        "helpers:disableTypesNodeMajor"
      ],
      "baseBranches": ["develop"]
    }
  },
  "xo": {
    "globals": [],
    "prettier": true,
    "rules": {
      "generator-star-spacing": "off",
      "import/no-extraneous-dependencies": "off",
      "import/no-unassigned-import": "off",
      "import/no-unresolved": "off",
      "import/order": "off",
      "new-cap": [
        {
          "newIsCap": true,
          "capIsNew": true,
          "capIsNewExceptions": []
        },
        "error"
      ],
      "operator-linebreak": "off"
    },
    "semicolon": false
  }
}
